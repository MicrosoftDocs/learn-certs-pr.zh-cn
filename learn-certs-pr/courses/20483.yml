### YamlMime:Course
title: Programming in C#
metadata:
  title: 'Course 20483-C: Programming in C#'
  description: 'Course 20483-C: Programming in C#'
uid: course.20483
courseNumber: '20483-C'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: 描述 Visual C#的核心语法和功能。
- skill: 创建方法，处理异常并描述大型应用程序的监控需求。
- skill: 实现典型桌面应用程序的基本结构和必要元素。
- skill: 创建类，定义和实现接口，以及创建和使用通用集合。
- skill: 使用继承来创建类层次结构并扩展 .NET Framework 类。
- skill: 通过使用文件输入/输出和流来读取和写入数据，并以不同的格式串行化和反串行化数据。
- skill: 创建并使用实体数据模型来访问数据库，并使用 LINQ 查询数据。
- skill: 通过使用 System.Net 命名空间和 WCF 数据服务中的类型访问和查询远程数据。
- skill: 通过使用 XAML 构建图形用户界面。
- skill: 通过使用任务和异步操作来提高应用程序的吞吐量和响应时间。
- skill: 将非托管库和动态组件集成到 Visual C# 应用程序中。
- skill: 通过使用反射检查类型的元数据，创建和使用自定义属性，在运行时生成代码，以及管理程序集版本。
- skill: 通过使用对称和非对称加密来加密和解密数据。
learningPartnersLink: https://www.microsoft.com/learning/partners.aspx
locales:
- en
levels:
- intermediate
roles:
- developer
products:
- vs
exams:
- uid: exam.70-483
summary: |-
  本培训课程向开发人员教授开发人员使用 Visual C# 语言创建 Windows 应用程序所需的编程技能。在课堂上的五天时间里，学生回顾 Visual C# 程序结构、语言语法和实施细节的基础，然后在构建包含 .NET Framework 4.7 几个功能的应用程序的整个星期中巩固他们的知识。

  #### 受众概况
  本课程面向经验丰富的开发人员，这些开发人员已经具有 C，C ++，JavaScript，Objective-C，Microsoft Visual Basic 或 Java 的编程经验，并且了解面向对象编程的概念。本课程不适用于编程新手；它面向具有至少一个月的面向对象环境编程经验的专业开发人员。
prerequisitesSection: |-
  参加本课程的开发人员应该已经在使用 C# 完成基本编程任务方面获得了有限的经验。更具体地说，学生应该具有使用 C# 的实践经验，以证明他们对以下方面有所理解&#58;
  - 如何在应用程序中命名、声明、初始化值并将值分配给变量。
  - 使用方法&#58; 算术运算符，执行涉及一个或多个变量的算术运算；关系运算符，用于测试两个变量或表达式之间的关系；逻辑运算符，用于合并包含关系运算符的表达式。
  - 如何使用 C# 语言关键词为简单的编程语句创建代码语法，以及如何使用 Visual Studio IDE 识别语法错误。
  - 如何使用 IF 语句创建简单的分支结构。
  - 如何使用 For 语句创建简单的循环结构以遍历数据数组。
  - 如何使用 Visual Studio IDE 定位简单的逻辑错误。
  - 如何创建一个接受参数(参数并返回指定类型的值)的函数。
  - 如何使用 Visual Studio 工具箱中的标准控件设计和构建简单的用户界面。
  - 如何连接到 SQL Server 数据库以及如何检索和存储数据的基础知识。
  - 如何在循环中排序数据。
  - 如何识别程序中使用的类和方法。
outlineSection: |-
  ### 模块 1&#58; Visual C# 语法综述
  Microsoft .NET Framework 4.7 版提供了一个全面的开发平台，您可以使用该平台来构建、部署和管理应用程序和服务。通过使用 .NET Framework，您可以创建视觉上引人注目的应用程序，实现跨技术边界的无缝通信，并为广泛的业务流程提供支持。

  在本模块中，您将了解 .NET Framework 和 Microsoft Visual Studio 提供的一些核心功能。您还将学习一些使您能够开始开发 .NET Framework 应用程序的核心 Visual C# 构造函数。

  #### 课程
  - 使用 Visual C# 编写应用程序概述
  - 数据类型，运算符和表达式
  - Visual C# 编程语言构造


  #### 实验&#58; 为学生列表实现编辑功能
  - 为学生名单实现插入功能
  - 为学生名单实现删除功能
  - 显示学生的年龄

  学完本模块后，学生将能够&#58;
  - 描述 .NET Framework 应用程序的体系结构以及 Visual Studio 2017 和 Visual C# 提供的功能。
  - 使用基本的 Visual C# 数据类型、运算符和表达式。
  - 使用标准的 Visual C# 构造函数。

  ### 模块 2&#58; 创建方法，处理异常和监控应用程序
  应用程序通常由执行特定功能的功能逻辑单元组成，例如提供对数据的访问或触发某些逻辑处理。Visual C# 是一种面向对象的语言，它使用方法概念来封装功能的逻辑单元。方法可以很简单也可以很复杂，随您喜欢，因此，重要的是要考虑在方法中发生异常时应用程序的状态会发生什么。

  在本模块中，您将学习如何创建和使用方法以及如何处理异常。您还将学习如何使用日志记录和跟踪来记录发生的任何异常的详细信息。

  #### 课程
  - 创建和调用方法
  - 创建重载的方法并使用可选和输出参数
  - 处理异常
  - 监控应用


  #### 实验&#58; 扩展类注册应用程序功能
  - 重构注册码
  - 验证学生信息
  - 将更改保存至类表

  学完本模块后，学生将能够&#58;
  - 创建和调用方法。
  - 创建重载的方法并使用可选参数。
  - 处理异常。
  - 通过使用日志记录、跟踪和分析来监控应用程序

  ### 模块 3&#58; Visual C# 的基本类型和构造函数
  若要使用 Windows Presentation Foundation(WPF)或其他 .NET Framework 平台创建有效的应用程序，必须首先学习一些基本的 Visual C# 构造函数。您需要知道如何创建简单的结构来表示正在使用的数据项。您需要知道如何将这些结构组织到集合中，以便可以添加项目、检索项目以及对项目进行迭代。最后，您需要知道如何订阅事件，以便可以响应用户的操作。

  在本模块中，您将学习如何创建和使用结构和枚举，将数据组织到集合中以及创建和订阅事件。

  #### 课程
  - 实施结构和枚举
  - 将数据整理到集合中
  - 处理事件


  #### 实验&#58; 编写成绩原型应用程序的代码
  - 将导航逻辑添加到成绩原型应用程序中
  - 创建数据类型以存储用户和成绩信息
  - 显示用户和成绩信息

  学完本模块后，学生将能够&#58;
  - 创建和使用结构和枚举。
  - 使用集合类来组织数据。
  - 创建并订阅事件。

  ### 模块 4&#58; 创建类和实现类型安全的集合
  在本模块中，您将学习如何使用接口和类来定义和创建自己的自定义可重用类型。您还将学习如何创建和使用任何类型的可枚举、类型安全的集合。
  #### 课程
  - 建立类
  - 定义和实现接口
  - 实施类型安全的集合


  #### 实验&#58; 向应用程序添加数据验证和类型安全
  - 将教师、学生和成绩结构实施为类
  - 将数据验证添加到成绩类
  - 按姓名顺序显示学生
  - 使教师能够修改类和成绩数据

  学完本模块后，您将能够&#58;
  - 创建和实例化类。
  - 创建和实例化接口。
  - 使用泛型创建类型安全的集合。


  ### 模块 5&#58; 使用继承创建类层次结构
  在本模块中，您将学习如何使用继承来创建类层次结构并扩展 .NET Framework 类型。
  #### 课程
  - 创建类层次结构
  - 扩展 .NET Framework 类


  #### 实验&#58; 将通用功能重构到用户类中
  - 将通用功能重构为用户类
  - 使用抽象方法实现密码复杂性
  - 创建 ClassFullException 自定义异常

  学完本模块后，您将能够&#58;
  - 通过使用继承创建基类和派生类。
  - 创建从 .NET Framework 类继承的类。


  ### 模块 6&#58; 读写本地数据
  在本模块中，您将学习如何通过使用事务性文件系统 I / O 操作来读取和写入数据，如何将数据串行化和反串行化到文件系统，以及如何使用流来读取和写入数据到文件系统。
  #### 课程
  - 读写文件
  - 串行化和反串行化数据
  - 使用流执行 I / O


  #### 实验&#58; 生成成绩报告
  - 将成绩报告的数据串行化为 XML
  - 预览成绩报告
  - 将串行化成绩数据保存到文件

  学完本模块后，您将能够&#58;
  - 通过使用文件 I / O 在文件系统中读写数据。
  - 将数据转换为可以写入文件或其他数据源或从中读取的格式。
  - 使用流向文件或数据源发送数据或从文件或数据源接收数据。


  ### 模块 7&#58; 访问数据库
  在本模块中，您将学习如何创建和使用实体数据模型(EDM)，以及如何使用语言集成查询(LINQ)查询多种类型的数据。
  #### 课程
  - 创建和使用实体数据模型
  - 使用 LINQ 查询数据


  #### 实验&#58; 检索和修改成绩数据
  - 从美术学院数据库创建实体数据模型
  - 使用实体框架更新学生和成绩数据
  - 扩展实体数据模型以验证数据

  学完本模块后，您将能够&#58;
  - 创建、使用和自定义 EDM。
  - 使用 LINQ 查询数据。


  ### 模块 8&#58; 访问远程数据
  在本模块f中，您将学习如何使用 System.Net 命名空间中的请求和响应类直接操作远程数据源。您还将学习如何使用 Windows Communication Foundation(WCF)数据服务通过 Web 公开和使用实体数据模型(EDM)。
  #### 课程
  - 跨网页访问数据
  - 使用 OData 连接的服务访问数据


  #### 实验&#58; 远程检索和修改成绩数据
  - 为 SchoolGrades 数据库创建 WCF 数据服务
  - 将数据服务集成到应用程序中
  - 通过网页检索学生照片(如果时间允许)

  学完本模块后，您将能够&#58;
  - 向 Web 服务和其他远程数据源发送数据并从中接收数据。
  - 使用 WCF 数据服务访问数据。


  ### 模块 9&#58; 为图形应用程序设计用户界面
  在本模块中，您将学习如何使用可扩展应用程序标记语言(XAML)和 Windows Presentation Foundation(WPF)创建引人入胜的 UI。
  #### 课程
  - 使用 XAML 设计用户界面
  - 将控件绑定到数据


  #### 实验&#58; 自定义学生照片并设置应用程序样式
  - 自定义学生照片的外观
  - 设置登录视图的样式
  - 对 StudentPhoto 控件进行动画处理(如果时间允许)

  学完本模块后，您将能够&#58;
  - 使用 XAML 设计 UI 。
  - 将 XAML 控件绑定到数据。
  - 将样式应用于 XAML UI。


  ### 模块 10&#58; 提高应用程序性能和响应能力
  在本模块中，您将学习如何通过在多个线程之间分布操作来提高应用程序的性能。
  #### 课程
  - 实施多任务
  - 异步执行操作
  - 同步并发访问数据


  #### 实验&#58; 提高应用程序的响应能力和性能
  - 确保在检索教师数据时 UI 保持响应
  - 在长期运行过程中提供视觉反馈

  学完本模块后，您将能够&#58;
  - 使用任务并行库来实现多任务操作。
  - 执行长时间运行的操作而不会阻塞线程。
  - 控制多个线程可以同时访问资源的方式。


  ### 模块 11&#58; 与非托管代码集成
  在本模块中，您将学习如何在应用程序中互操作非托管代码，以及如何确保代码释放任何非托管资源。
  #### 课程
  - 创建和使用动态对象
  - 管理对象的生命周期并控制非托管资源


  #### 实验&#58; 升级成绩报告
  - 使用 Word 生成成绩报告
  - 通过实现处置模式来控制 Word 对象的生命周期

  学完本模块后，您将能够&#58;
  - 通过使用动态语言运行时(DLR)将非托管代码集成到 Microsoft Visual C# 应用程序中。
  - 控制非托管资源的生命周期，并确保您的应用程序释放资源。


  ### 模块 12&#58; 创建可重用的类型和程序集
  在本模块中，您将学习如何通过反射使用现有的程序集，以及如何通过使用属性向类型和类型成员添加其他元数据。您还将学习如何通过使用代码文文件对像模型(CodeDOM)在运行时生成代码，以及如何通过使用全局程序集缓存(GAC)来确保对程序集进行签名和版本控制以及对其他应用程序可用。
  #### 课程
  - 检查对像元数据
  - 创建和使用自定义属性
  - 生成托管代码
  - 对程序集进行版本控制、签名和部署


  #### 实验&#58; 指定要包含在成绩报告中的数据
  - 创建和应用 IncludeInReport 属性
  - 更新报告
  - 集中存储 Grades.Utilities 程序集(如果时间允许)

  学完本模块后，您将能够&#58;
  - 使用反射来检查和执行程序集。
  - 创建和使用自定义属性。
  - 使用 CodeDOM 在运行时生成托管代码。
  - 对程序集进行版本控制、签名并部署到 GAC。


  ### 模块 13&#58; 加密和解密数据
  在本模块中，您将学习如何实现对称和非对称加密，以及如何使用哈希来生成数据的数学表示。您还将学习如何创建和管理 X509 证书，以及如何在非对称加密过程中使用它们。
  #### 课程
  - 实施对称加密
  - 实现非对称加密


  #### 实验&#58; 加密和解密成绩报告
  - 加密成绩报告
  - 加密成绩报告

  学完本模块后，您将能够&#58;
  - 通过使用对称加密来加密数据。
  - 通过使用非对称加密来加密数据。

